openapi: 3.0.3
info:
  title: Interoperability API Gateway Micro Service
  description: exposes the API for interacting with interoperability features
  version: '1.0'
  termsOfService: 'http://swagger.io/terms/'
  x-api-id: an x-api-id
  x-summary: an x-summary
servers:
  - url: https://localhost:8080
    description: This service is the interoperability API gateway
tags:
  - name: Gateway
    description: Everything about your APIs
  - name: health
    description: Verify service status
security:
  - bearerAuth: []
paths:
  /push-signal:
    post:
      tags:
        - Gateway
      summary: Insert signals
      description: Insert a signal
      operationId: pushSignal
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignalRequest'
      responses:
        '200':
          description: signal inteserted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Signal'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available

  /push-signal-list:
    post:
      tags:
        - Gateway
      summary: Insert signals
      description: Insert a signal
      operationId: pushSignalList
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignalConsumerRequest'
      responses:
        '200':
          description: signal inteserted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Signal'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available

components:
  schemas:
    SignalRequest:
      type: object
      additionalProperties: false
      title: SignalRequest
      description: represents the details of a verified attribute bound to the agreement.
      properties:
        signalType:
          $ref: '#/components/schemas/SignalType'
        objectId:
          type: string
          description: object id
          pattern: '^[a-zA-Z0-9\-_]+$'
          minLength: 0
          maxLength: 500
        objectType:
          type: string
          description: object type. In case of seed update this claim must by set to 'seedUpdate'
          pattern: '^[a-zA-Z0-9\s\-_]+$'
          minLength: 0
          maxLength: 500
        eserviceId:
          type: string
          description: eservice Id
        signalId:
          type: integer
          format: int64
          example: 1
          description: unique index of eserviceId
      required:
        - objectId
        - signalType
        - eserviceId
        - objectType
        - signalId
    SignalConsumerRequest:
      type: object
      additionalProperties: false
      title: SignalConsumerRequest
      description: represents the details of a verified attribute bound to the agreement.
      properties:
        signalType:
          $ref: '#/components/schemas/SignalType'
        consumers:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/ConsumerItem'
        objectType:
          type: string
          description: object type. In case of seed update this claim must by set to 'seedUpdate'
          pattern: '^[a-zA-Z0-9\s\-_]+$'
          minLength: 0
          maxLength: 500
        eserviceId:
          type: string
          description: eservice Id
        signalId:
          type: integer
          format: int64
          example: 1
          description: unique index of eserviceId
      required:
        - objectId
        - signalType
        - eserviceId
        - objectType
        - signalId
    SignalType:
      type: string
      description: type of signal
      enum:
        - CREATE
        - UPDATE
        - DELETE
        - SEEDUPDATE
    ConsumerItem:
      type: object
      description: ConsumerItem
      properties:
        consumerId:
          type: string
          description: consumerId
        objectId:
          type: string
          description: object id
          pattern: '^[a-zA-Z0-9\-_]+$'
          minLength: 0
          maxLength: 500
    Problem:
      properties:
        type:
          description: URI reference of type definition
          type: string
        status:
          description: The HTTP status code generated by the origin server for this occurrence of the problem.
          example: 400
          exclusiveMaximum: true
          format: int32
          maximum: 600
          minimum: 100
          type: integer
        title:
          description: A short, summary of the problem type. Written in english and readable
          example: Service Unavailable
          maxLength: 64
          pattern: '^[ -~]{0,64}$'
          type: string
        correlationId:
          description: Unique identifier of the request
          example: '53af4f2d-0c87-41ef-a645-b726a821852b'
          maxLength: 64
          type: string
        detail:
          description: A human readable explanation of the problem.
          example: Request took too long to complete.
          maxLength: 4096
          pattern: '^.{0,1024}$'
          type: string
        errors:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/ProblemError'
      additionalProperties: false
      required:
        - type
        - status
        - title
        - errors
    Signal:
      type: object
      additionalProperties: false
      title: Signal
      description: represents the id of the signal just entered.
      properties:
        signalId:
          type: integer
          format: int64
          description: signal id
    ProblemError:
      properties:
        code:
          description: Internal code of the error
          example: 123-4567
          minLength: 8
          maxLength: 8
          pattern: '^[0-9]{3}-[0-9]{4}$'
          type: string
        detail:
          description: A human readable explanation specific to this occurrence of the problem.
          example: Parameter not valid
          maxLength: 4096
          pattern: '^.{0,1024}$'
          type: string
      required:
        - code
        - detail
  securitySchemes:
    bearerAuth:
      type: http
      description: 'A bearer token in the format of a JWS and conformed to the specifications included in [RFC8725](https://tools.ietf.org/html/RFC8725).'
      scheme: bearer
      bearerFormat: JWT
